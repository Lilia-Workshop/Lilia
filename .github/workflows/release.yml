name: Release

on:
  push:
    tags:
      - release-*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: | 
            dotnet nuget add source https://nuget.emzi0767.com/api/v3/index.json
            dotnet restore
    - name: Build and Test
      run: |
            dotnet build --no-restore --nologo
            dotnet test --no-build --no-restore --nologo --verbosity normal
    - name: Prepare executables
      run: |
        dotnet publish -r win-x86 -c Release --self-contained true -p:EnableCompressionInSingleFile=true --version-suffix win-x86 --output app/win-x86
        dotnet publish -r linux-x64 -c Release --self-contained true -p:EnableCompressionInSingleFile=true --version-suffix linux-x64 --output app/linux-x64
        dotnet publish -r linux-arm -c Release --self-contained true -p:EnableCompressionInSingleFile=true --version-suffix linux-arm --output app/linux-arm
        dotnet publish -r linux-arm64 -c Release --self-contained true -p:EnableCompressionInSingleFile=true --version-suffix linux-arm64 --output app/linux-arm64
        dotnet publish -r osx64 -c Release --self-contained true -p:EnableCompressionInSingleFile=true --version-suffix osx64 --output app/osx64
    - name: Create archive of built files
      run: |
            pushd /home/runner/work/Lilia/Lilia/
            zip -r app.zip ./app
            popd
    - name: Get tagged version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: ${{ steps.get_version.outputs.VERSION }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
    - name: Upload release assets
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: /home/runner/work/Lilia/Lilia/app.zip
        asset_name: app.zip
        asset_content_type: application/zip