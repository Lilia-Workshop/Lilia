name: Release

on:
  push:
    tags:
      - release-*

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: |
          dotnet nuget add source https://nuget.emzi0767.com/api/v3/index.json
          dotnet restore --nologo
      - name: Build and Test
        run: |
          dotnet build Helya --no-restore --nologo -c Release
          dotnet build --no-restore --nologo -c Release
          dotnet test --no-build --no-restore --nologo --verbosity normal -c Release

      - name: Single file (win-x86)
        run: |
          dotnet build Helya -r win-x86 --self-contained --no-restore --nologo -c Release
          dotnet publish Helya -r win-x86 -c Release --self-contained true --nologo --no-build --no-restore --output app/win-x86

      - name: Single file (win-arm)
        run: |
          dotnet build Helya -r win-arm --self-contained --no-restore --nologo -c Release
          dotnet publish Helya -r win-arm -c Release --self-contained true --nologo --no-build --no-restore --output app/win-arm

      - name: Single file (linux-x64)
        run: |
          dotnet build Helya -r linux-x64 --self-contained --no-restore --nologo -c Release        
          dotnet publish Helya -r linux-x64 -c Release --self-contained true --nologo --no-build --no-restore --output app/linux-x64

      - name: Single file (linux-arm)
        run: |
          dotnet build Helya -r linux-arm --self-contained --no-restore --nologo -c Release
          dotnet publish Helya -r linux-arm -c Release --self-contained true --nologo --no-build --no-restore --output app/linux-arm

      - name: Single file (osx-x64)
        run: |
          dotnet build Helya -r osx-x64 --self-contained --no-restore --nologo -c Release
          dotnet publish Helya -r osx-x64 -c Release --self-contained true --nologo --no-build --no-restore --output app/osx-x64

      - name: Create archive of built files
        run: |
          pushd /home/runner/work/Helya/Helya/
          zip -r app.zip ./app
          popd
      - name: Get tagged version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
      - name: Upload release assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/Helya/Helya/app.zip
          asset_name: app.zip
          asset_content_type: application/zip